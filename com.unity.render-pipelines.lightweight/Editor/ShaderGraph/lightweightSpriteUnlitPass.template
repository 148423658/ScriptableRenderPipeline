Pass
{
    Name "SpriteUnlit"
    Tags{"LightMode" = "LightweightForward"}

${Tags}
${Blending}
${Culling}
${ZTest}
${ZWrite}

    HLSLPROGRAM
    // Required to compile gles 2.0 with standard srp library
    #pragma prefer_hlslcc gles
    #pragma exclude_renderers d3d11_9x
    #pragma target 2.0

    #pragma vertex vert
    #pragma fragment frag

${Defines}
    // #include "Packages/com.unity.render-pipelines.lightweight/ShaderLibrary/Core.hlsl"
    
${Graph}
    struct GraphVertexOutput
    {
        float4 position : POSITION;
${VertexOutputStruct}
    };

    GraphVertexOutput vert (GraphVertexInput v)
    {
        GraphVertexOutput o = (GraphVertexOutput)0;
${VertexShader}
        o.position = TransformObjectToHClip(v.vertex.xyz);
${VertexShaderOutputs}
        return o;
    }

    half4 frag (GraphVertexOutput IN) : SV_Target
    {
${PixelShader}
        SurfaceDescriptionInputs surfaceInput = (SurfaceDescriptionInputs)0;
${PixelShaderSurfaceInputs}
        SurfaceDescription surf = PopulateSurfaceData(surfaceInput);
        float3 Color = float3(0.5, 0.5, 0.5);
        float Alpha = 1;
${PixelShaderSurfaceRemap}
        return half4(Color, Alpha);
    }

    ENDHLSL
}