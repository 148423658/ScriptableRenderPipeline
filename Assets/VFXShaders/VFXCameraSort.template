#pragma kernel CSMain
${VFXGlobalInclude}
${VFXGlobalDeclaration}

CBUFFER_START(params)
    uint nbMax;
CBUFFER_END

CBUFFER_START(cameraParams)
    float3 cameraPosition;
CBUFFER_END

ByteAddressBuffer attributeBuffer;
StructuredBuffer<uint> inputBuffer;

Buffer<uint> deadListCount;

struct Kvp
{
	float sortKey;
	uint index;
};

RWStructuredBuffer<Kvp> outputBuffer;

[numthreads(NB_THREADS_PER_GROUP,1,1)]
void CSMain(uint3 id : SV_DispatchThreadID, uint3 groupId : SV_GroupThreadID)
{
	if (id.x < nbMax - deadListCount[0])	
	{
		uint index = inputBuffer[id.x];
		${VFXLoadAttributes:{position}}
		
		// sqr distance from camera
		float3 wPos = position;//TransformPositionVFXToWorld(position);
		float3 camToPos = wPos - cameraPosition;
		
		Kvp kvp;
		kvp.sortKey = dot(camToPos,camToPos);
		kvp.index = index;

		outputBuffer[id.x] = kvp;
	}
}
